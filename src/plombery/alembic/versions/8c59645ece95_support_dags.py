"""support dags

Revision ID: 8c59645ece95
Revises: c2a3cb9f639e
Create Date: 2025-11-01 12:21:50.793835

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite
import plombery.database.type_helpers

# revision identifiers, used by Alembic.
revision: str = "8c59645ece95"
down_revision: Union[str, Sequence[str], None] = "c2a3cb9f639e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_run_outputs",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("mimetype", sa.String(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("encoding", sa.String(), nullable=True),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_runs",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("pipeline_run_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column(
            "start_time", plombery.database.type_helpers.AwareDateTime(), nullable=True
        ),
        sa.Column(
            "end_time", plombery.database.type_helpers.AwareDateTime(), nullable=True
        ),
        sa.Column("duration", sa.Float(), nullable=True),
        sa.Column("context", sa.JSON(), nullable=True),
        sa.Column("task_output_id", sa.String(), nullable=True),
        sa.Column("map_index", sa.Integer(), nullable=True),
        sa.Column("parent_task_run_id", sa.String(length=36), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_task_run_id"],
            ["task_runs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pipeline_run_id"],
            ["pipeline_runs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_output_id"],
            ["task_run_outputs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_taskrun_pipeline",
        "task_runs",
        ["pipeline_run_id", "task_id", "map_index"],
        unique=True,
    )
    op.create_index("idx_taskrun_status", "task_runs", ["status"], unique=False)
    op.create_index(
        op.f("ix_task_runs_map_index"), "task_runs", ["map_index"], unique=False
    )
    op.add_column(
        "pipeline_runs",
        sa.Column(
            "end_time", plombery.database.type_helpers.AwareDateTime(), nullable=True
        ),
    )
    op.create_index(
        "idx_pipeline_status", "pipeline_runs", ["pipeline_id", "status"], unique=False
    )
    op.drop_column("pipeline_runs", "tasks_run")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("pipeline_runs", sa.Column("tasks_run", sqlite.JSON(), nullable=True))
    op.drop_index("idx_pipeline_status", table_name="pipeline_runs")
    op.drop_column("pipeline_runs", "end_time")
    op.drop_index(op.f("ix_task_runs_map_index"), table_name="task_runs")
    op.drop_index("idx_taskrun_status", table_name="task_runs")
    op.drop_index("idx_taskrun_pipeline", table_name="task_runs")
    op.drop_table("task_runs")
    op.drop_table("task_run_outputs")
    # ### end Alembic commands ###
